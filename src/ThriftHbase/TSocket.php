<?php
/**
 * Created by PhpStorm.
 * User: xfachen
 * Date: 2017/10/11
 * Time: 11:19
 */

namespace ThriftHbase;


use Thrift\Exception\TTransportException;
use Thrift\Factory\TStringFuncFactory;

class TSocket extends \Thrift\Transport\TSocket
{
    private $recvTimeoutSec_ = 10000;//10s
    public function readAll($len) {
        $data = '';
        $got = 0;
        $start = microtime(1)*1000;
        $i=0;$last=0;
        while (($got = TStringFuncFactory::create()->strlen($data)) < $len) {

            $data .= $this->read($len - $got);

            if (!($i = ($i+1)%10)) {
                if ($got > $last){
                    $last = $got;
                    continue;
                }
                if (microtime(1)*1000 - $start > $this->recvTimeoutSec_){
                    throw new TTransportException('TSocket: timed out writing '.$len.' bytes from '.
                        $this->host_.':'.$this->port_ . ', '.$got.' bytes got');
                }
            }
        }
        return $data;
    }

    public function setRecvTimeout($timeout)
    {
        $this->recvTimeoutSec_ = $timeout*1000;
        parent::setRecvTimeout($timeout); // TODO: Change the autogenerated stub
    }

}